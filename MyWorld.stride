<?xml version="1.0" encoding="UTF-8"?>
<class name="MyWorld" extends="World" extends-java="World" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields>
        <variable access="private" type="Backround" type-java="Backround" name="backround" value="new Backround()" value-java=" new Backround()" enable="true"/>
        <variable access="private" type="int" type-java="int" name="time" value="0" value-java="0" enable="true"/>
        <variable access="private" type="int" type-java="int" name="score" value="0" value-java="0" enable="true"/>
    </fields>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">Constructor for objects of class MyWorld.</javadoc>
            <params/>
            <throws/>
            <delegate target="super" params="1200,800,1,false" params-java="1200, 800, 1, false"/>
            <body>
                <call expression="prepare()" expression-java="prepare()" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="private" type="void" type-java="void" name="prepare" enable="true">
            <javadoc xml:space="preserve">Prepare the world for the start of the program.
That is: create the initial objects and add them to the world.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="addObject(backround,600,401)" expression-java="addObject(backround, 600, 401)" enable="true"/>
                <variable type="Backround" type-java="Backround" name="backround2" value="new Backround()" value-java=" new Backround()" enable="true"/>
                <call expression="addObject(backround2,1800,401)" expression-java="addObject(backround2, 1800, 401)" enable="true"/>
                <variable type="car" type-java="car" name="car" value="new car()" value-java=" new car()" enable="true"/>
                <call expression="addObject(car,69,393)" expression-java="addObject(car, 69, 393)" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="antal" value="Greenfoot.getRandomNumber(30+getspeed())" value-java="Greenfoot.getRandomNumber(30 + getspeed())" enable="true"/>
                <if condition="antal&lt;1" condition-java="antal &lt; 1" enable="true">
                    <ifStatements>
                        <variable type="int" type-java="int" name="y" value="Greenfoot.getRandomNumber(800)" value-java="Greenfoot.getRandomNumber(800)" enable="true"/>
                        <variable type="house" type-java="house" name="House" value="new house()" value-java=" new house()" enable="true"/>
                        <call expression="addObject(House,1200,y)" expression-java="addObject(House, 1200, y)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="time==20" condition-java="time == 20" enable="true">
                    <ifStatements>
                        <assign dest="score" dest-java="score" src="score+1" src-java="score + 1" enable="true"/>
                        <assign dest="time" dest-java="time" src="0" src-java="0" enable="true"/>
                    </ifStatements>
                </if>
                <assign dest="time" dest-java="time" src="time+1" src-java="time + 1" enable="true"/>
                <call expression="showText(&quot;Score&quot;+score,40,150)" expression-java="showText(&quot;Score&quot; + score, 40, 150)" enable="true"/>
            </body>
        </method>
        <method access="public" type="int" type-java="int" name="getspeed" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <return value="backround.getspeed()" value-java="backround.getspeed()" enable="true"/>
            </body>
        </method>
    </methods>
</class>
